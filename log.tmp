1,6258c1
< ========== STARTING EXECUTION ==============================
< Evaluating instruction: movq
<   int_a	0
<   var_a	i
< 
<    Location                           Value
< 0   reg rbp                            1000
< 1   reg rsp                            1000
< 2     var i                               0
< 3   block.1  FunPointer(fun_name='block.1')
< 4   block.2  FunPointer(fun_name='block.2')
< 5   block.3  FunPointer(fun_name='block.3')
< 6   block.4  FunPointer(fun_name='block.4')
< 7   block.5  FunPointer(fun_name='block.5')
< 8   block.6  FunPointer(fun_name='block.6')
< 9   block.7  FunPointer(fun_name='block.7')
< 10  block.8  FunPointer(fun_name='block.8')
< 11    start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               0
< 4      block.1  FunPointer(fun_name='block.1')
< 5      block.2  FunPointer(fun_name='block.2')
< 6      block.3  FunPointer(fun_name='block.3')
< 7      block.4  FunPointer(fun_name='block.4')
< 8      block.5  FunPointer(fun_name='block.5')
< 9      block.6  FunPointer(fun_name='block.6')
< 10     block.7  FunPointer(fun_name='block.7')
< 11     block.8  FunPointer(fun_name='block.8')
< 12       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               0
< 4        var j                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3        var i                               0
< 4        var j                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3        var i                               0
< 4        var j                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3        var i                               1
< 4        var j                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               1
< 4        var j                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               1
< 4        var j                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               1
< 4        var j                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               1
< 4        var j                               0
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               1
< 4        var j                               0
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               1
< 4        var j                               0
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               1
< 4        var j                               0
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               1
< 4        var j                               1
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3        var i                               1
< 4        var j                               1
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3        var i                               1
< 4        var j                               1
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3        var i                               2
< 4        var j                               1
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               2
< 4        var j                               1
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               2
< 4        var j                               0
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               2
< 4        var j                               0
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               2
< 4        var j                               0
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               2
< 4        var j                               0
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               2
< 4        var j                               0
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               2
< 4        var j                               0
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               2
< 4        var j                               1
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               2
< 4        var j                               1
< 5    var tmp.0                               0
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               2
< 4        var j                               1
< 5    var tmp.0                               1
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3        var i                               2
< 4        var j                               1
< 5    var tmp.0                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3        var i                               2
< 4        var j                               1
< 5    var tmp.0                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
< Evaluating instruction: movq
<   var_a	i
<   reg_a	rdi
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               2
< 4        var i                               2
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: callq	print_int
< 
< CALL TO print_int: 2
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               2
< 4        var i                               2
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               2
< 4        var i                               2
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: movq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               2
< 4        var i                               2
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               2
< 4        var i                               2
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               2
< 4        var i                               2
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               0
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               0
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               1
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               1
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               1
< 6    var tmp.0                               1
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               2
< 4        var i                               3
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               0
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               0
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               1
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               1
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               1
< 6    var tmp.0                               1
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               2
< 4        var i                               4
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
< Evaluating instruction: movq
<   var_a	i
<   reg_a	rdi
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               4
< 4        var i                               4
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: callq	print_int
< 
< CALL TO print_int: 4
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               4
< 4        var i                               4
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               4
< 4        var i                               4
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: movq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               4
< 4        var i                               4
< 5        var j                               4
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               4
< 4        var i                               4
< 5        var j                               4
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               4
< 4        var i                               4
< 5        var j                               4
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               4
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               4
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               0
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               0
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               1
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               1
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               1
< 6    var tmp.0                               1
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               3
< 6    var tmp.0                               3
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               4
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               4
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               4
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               4
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               4
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               4
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               5
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               5
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               4
< 4        var i                               5
< 5        var j                               5
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               5
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               5
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               0
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               0
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               1
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               1
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               1
< 6    var tmp.0                               1
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               3
< 6    var tmp.0                               3
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               4
< 4        var i                               6
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
< Evaluating instruction: movq
<   var_a	i
<   reg_a	rdi
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               6
< 4        var i                               6
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: callq	print_int
< 
< CALL TO print_int: 6
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               6
< 4        var i                               6
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               6
< 4        var i                               6
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: movq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               6
< 4        var i                               6
< 5        var j                               6
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               6
< 4        var i                               6
< 5        var j                               6
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               6
< 4        var i                               6
< 5        var j                               6
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               6
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               6
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               0
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               0
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               1
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               1
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               1
< 6    var tmp.0                               1
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               3
< 6    var tmp.0                               3
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               4
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               4
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               4
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               4
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               4
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               4
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               5
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               5
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               5
< 6    var tmp.0                               5
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               5
< 6    var tmp.0                              10
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               5
< 6    var tmp.0                              10
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               5
< 6    var tmp.0                              10
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               6
< 6    var tmp.0                              10
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               6
< 6    var tmp.0                              10
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               6
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               6
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               6
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               6
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               7
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               7
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               6
< 4        var i                               7
< 5        var j                               7
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               7
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               7
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               0
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               0
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               1
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               1
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               1
< 6    var tmp.0                               1
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               3
< 6    var tmp.0                               3
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               4
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               4
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               4
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               4
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               6
< 4        var i                               8
< 5        var j                               4
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
< Evaluating instruction: movq
<   var_a	i
<   reg_a	rdi
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               8
< 4        var i                               8
< 5        var j                               4
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: callq	print_int
< 
< CALL TO print_int: 8
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               8
< 4        var i                               8
< 5        var j                               4
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               8
< 4        var i                               8
< 5        var j                               4
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: movq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               8
< 4        var i                               8
< 5        var j                               8
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               8
< 4        var i                               8
< 5        var j                               8
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               8
< 4        var i                               8
< 5        var j                               8
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               e
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               8
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   var_a	i
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               8
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               0
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               0
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               0
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               1
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               1
< 6    var tmp.0                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               1
< 6    var tmp.0                               1
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               1
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               2
< 6    var tmp.0                               2
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               2
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               3
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               3
< 6    var tmp.0                               3
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               3
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               4
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               4
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               4
< 6    var tmp.0                               4
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               4
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               4
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               4
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               5
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               5
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               5
< 6    var tmp.0                               5
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               5
< 6    var tmp.0                              10
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               5
< 6    var tmp.0                              10
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               5
< 6    var tmp.0                              10
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               6
< 6    var tmp.0                              10
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               6
< 6    var tmp.0                              10
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               6
< 6    var tmp.0                               6
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               6
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               6
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               6
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               7
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               7
< 6    var tmp.0                              12
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               7
< 6    var tmp.0                               7
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               7
< 6    var tmp.0                              14
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               7
< 6    var tmp.0                              14
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               7
< 6    var tmp.0                              14
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               8
< 6    var tmp.0                              14
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               8
< 6    var tmp.0                              14
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               8
< 6    var tmp.0                               8
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   var_a	j
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               l
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               8
< 6    var tmp.0                              16
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	tmp.0
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               8
< 6    var tmp.0                              16
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               8
< 6    var tmp.0                              16
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   var_a	j
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2   reg EFLAGS                               g
< 3      reg rdi                               8
< 4        var i                               9
< 5        var j                               9
< 6    var tmp.0                              16
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   var_a	i
<   var_a	j
< 
---
> 2468
\ 文件末尾没有换行符
1,4309c1
< ========== STARTING EXECUTION ==============================
< Evaluating instruction: movq
<   int_a	0
<   reg_a	r12
< 
<    Location                           Value
< 0   reg rbp                            1000
< 1   reg rsp                            1000
< 2   reg r12                               0
< 3   block.1  FunPointer(fun_name='block.1')
< 4   block.2  FunPointer(fun_name='block.2')
< 5   block.3  FunPointer(fun_name='block.3')
< 6   block.4  FunPointer(fun_name='block.4')
< 7   block.5  FunPointer(fun_name='block.5')
< 8   block.6  FunPointer(fun_name='block.6')
< 9   block.7  FunPointer(fun_name='block.7')
< 10  block.8  FunPointer(fun_name='block.8')
< 11    start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               0
< 3   reg EFLAGS                               l
< 4      block.1  FunPointer(fun_name='block.1')
< 5      block.2  FunPointer(fun_name='block.2')
< 6      block.3  FunPointer(fun_name='block.3')
< 7      block.4  FunPointer(fun_name='block.4')
< 8      block.5  FunPointer(fun_name='block.5')
< 9      block.6  FunPointer(fun_name='block.6')
< 10     block.7  FunPointer(fun_name='block.7')
< 11     block.8  FunPointer(fun_name='block.8')
< 12       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               0
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               0
< 3   reg EFLAGS                               e
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               0
< 3   reg EFLAGS                               e
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               e
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               e
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               e
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
< Evaluating instruction: movq
<   reg_a	r12
<   reg_a	rdi
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: callq	print_int
< 
< CALL TO print_int: 2
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: movq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               e
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               e
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               e
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               g
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               g
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               g
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               g
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
< Evaluating instruction: movq
<   reg_a	r12
<   reg_a	rdi
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: callq	print_int
< 
< CALL TO print_int: 6
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: movq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               e
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               e
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               e
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                              14
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               g
< 4      reg rcx                              14
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               g
< 4      reg rcx                              14
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: movq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                              14
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               g
< 4      reg rcx                              14
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               g
< 4      reg rcx                              14
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                              10
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                              10
< 3   reg EFLAGS                               e
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                              10
< 3   reg EFLAGS                               e
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.2
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rax
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                              10
< 3   reg EFLAGS                               e
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      reg rax                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	conclusion
< 
< FINAL STATE:
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                              10
< 3   reg EFLAGS                               e
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      reg rax                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< OUTPUT: [2, 6]
< ========== FINISHED EXECUTION ==============================
< 26
\ 文件末尾没有换行符
---
> 2468
\ 文件末尾没有换行符
1,3812c1
< ========== STARTING EXECUTION ==============================
< Evaluating instruction: movq
<   int_a	0
<   reg_a	r12
< 
<    Location                           Value
< 0   reg rbp                            1000
< 1   reg rsp                            1000
< 2   reg r12                               0
< 3   block.1  FunPointer(fun_name='block.1')
< 4   block.2  FunPointer(fun_name='block.2')
< 5   block.3  FunPointer(fun_name='block.3')
< 6   block.4  FunPointer(fun_name='block.4')
< 7   block.5  FunPointer(fun_name='block.5')
< 8   block.6  FunPointer(fun_name='block.6')
< 9   block.7  FunPointer(fun_name='block.7')
< 10  block.8  FunPointer(fun_name='block.8')
< 11    start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               0
< 3   reg EFLAGS                               l
< 4      block.1  FunPointer(fun_name='block.1')
< 5      block.2  FunPointer(fun_name='block.2')
< 6      block.3  FunPointer(fun_name='block.3')
< 7      block.4  FunPointer(fun_name='block.4')
< 8      block.5  FunPointer(fun_name='block.5')
< 9      block.6  FunPointer(fun_name='block.6')
< 10     block.7  FunPointer(fun_name='block.7')
< 11     block.8  FunPointer(fun_name='block.8')
< 12       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               0
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               0
< 3   reg EFLAGS                               e
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               0
< 3   reg EFLAGS                               e
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               e
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               e
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               1
< 3   reg EFLAGS                               e
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      block.1  FunPointer(fun_name='block.1')
< 6      block.2  FunPointer(fun_name='block.2')
< 7      block.3  FunPointer(fun_name='block.3')
< 8      block.4  FunPointer(fun_name='block.4')
< 9      block.5  FunPointer(fun_name='block.5')
< 10     block.6  FunPointer(fun_name='block.6')
< 11     block.7  FunPointer(fun_name='block.7')
< 12     block.8  FunPointer(fun_name='block.8')
< 13       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
< Evaluating instruction: movq
<   reg_a	r12
<   reg_a	rdi
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: callq	print_int
< 
< CALL TO print_int: 2
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: movq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               2
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               e
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               e
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               3
< 3   reg EFLAGS                               e
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               e
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               g
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               g
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               4
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               g
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               g
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               5
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               g
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               2
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
< Evaluating instruction: movq
<   reg_a	r12
<   reg_a	rdi
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: callq	print_int
< 
< CALL TO print_int: 6
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: movq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               6
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               e
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               e
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               7
< 3   reg EFLAGS                               e
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               e
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               l
< 4      reg rcx                              14
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               g
< 4      reg rcx                              14
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               g
< 4      reg rcx                              14
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               8
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               0
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               1
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               2
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               3
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               6
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                               7
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
< Evaluating instruction: addq
<   reg_a	rcx
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               l
< 4      reg rcx                              14
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               g
< 4      reg rcx                              14
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: je	block.5
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               g
< 4      reg rcx                              14
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.6
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.3
< 
< Evaluating instruction: cmpq
<   reg_a	r12
<   reg_a	rcx
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.7
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                               9
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.4
< 
< Evaluating instruction: addq
<   int_a	1
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                              10
< 3   reg EFLAGS                               g
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.1
< 
< Evaluating instruction: cmpq
<   int_a	10
<   reg_a	r12
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                              10
< 3   reg EFLAGS                               e
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jl	block.8
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                              10
< 3   reg EFLAGS                               e
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      block.1  FunPointer(fun_name='block.1')
< 7      block.2  FunPointer(fun_name='block.2')
< 8      block.3  FunPointer(fun_name='block.3')
< 9      block.4  FunPointer(fun_name='block.4')
< 10     block.5  FunPointer(fun_name='block.5')
< 11     block.6  FunPointer(fun_name='block.6')
< 12     block.7  FunPointer(fun_name='block.7')
< 13     block.8  FunPointer(fun_name='block.8')
< 14       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	block.2
< 
< Evaluating instruction: movq
<   int_a	0
<   reg_a	rax
< 
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                              10
< 3   reg EFLAGS                               e
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      reg rax                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< Evaluating instruction: jmp	conclusion
< 
< FINAL STATE:
<       Location                           Value
< 0      reg rbp                            1000
< 1      reg rsp                            1000
< 2      reg r12                              10
< 3   reg EFLAGS                               e
< 4      reg rcx                              15
< 5      reg rdi                               6
< 6      reg rax                               0
< 7      block.1  FunPointer(fun_name='block.1')
< 8      block.2  FunPointer(fun_name='block.2')
< 9      block.3  FunPointer(fun_name='block.3')
< 10     block.4  FunPointer(fun_name='block.4')
< 11     block.5  FunPointer(fun_name='block.5')
< 12     block.6  FunPointer(fun_name='block.6')
< 13     block.7  FunPointer(fun_name='block.7')
< 14     block.8  FunPointer(fun_name='block.8')
< 15       start    FunPointer(fun_name='start')
< OUTPUT: [2, 6]
< ========== FINISHED EXECUTION ==============================
< 26
\ 文件末尾没有换行符
---
> 2468
\ 文件末尾没有换行符
1c1
< 26
\ 文件末尾没有换行符
---
> 2468
\ 文件末尾没有换行符
1,7194d0